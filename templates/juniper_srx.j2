{#
  Juniper SRX Configuration Template
  This template generates Juniper SRX configuration in set command format
#}
# Base Configuration Template for Juniper SRX devices
# Generated by NetMan at {{ ansible_date_time.date }} {{ ansible_date_time.time }}

# System Configuration 
set system host-name {{ hostname }}
set system domain-name {{ domain_name }}
set system root-authentication encrypted-password "{{ password | hash('md5') }}"

# Configure user account
set system login user {{ username }} class super-user
set system login user {{ username }} authentication encrypted-password "{{ password | hash('md5') }}"

# Configure system services
{% for service in system_services %}
set system services {{ service }}
{% endfor %}

# Configure interfaces
{% for interface in interfaces %}
set interfaces {{ interface.name }} description "{{ interface.description }}"
set interfaces {{ interface.name }} unit {{ interface.unit }} family {{ interface.family }} address {{ interface.address }}
{% endfor %}

# Configure security zones
{% for zone in security_zones %}
set security zones security-zone {{ zone.name }} screen {{ zone.screen }}
{% for interface in zone.interfaces %}
set security zones security-zone {{ zone.name }} interfaces {{ interface }}
{% endfor %}
{% endfor %}

# Configure security policies
{% for policy_group in security_policies %}
{% for policy in policy_group.policy %}
set security policies from-zone {{ policy_group.from_zone }} to-zone {{ policy_group.to_zone }} policy {{ policy.name }} match source-address {{ policy.match[0].source_address }}
set security policies from-zone {{ policy_group.from_zone }} to-zone {{ policy_group.to_zone }} policy {{ policy.name }} match destination-address {{ policy.match[1].destination_address }}
set security policies from-zone {{ policy_group.from_zone }} to-zone {{ policy_group.to_zone }} policy {{ policy.name }} match application {{ policy.match[2].application }}
set security policies from-zone {{ policy_group.from_zone }} to-zone {{ policy_group.to_zone }} policy {{ policy.name }} then {{ policy.then[0] }}
{% if policy.then | length > 1 %}
{% for log in policy.then[1].log %}
set security policies from-zone {{ policy_group.from_zone }} to-zone {{ policy_group.to_zone }} policy {{ policy.name }} then log {{ log }}
{% endfor %}
{% endif %}
{% endfor %}
{% endfor %}

# Configure routing
{% if routing.static_routes is defined %}
{% for route in routing.static_routes %}
set routing-options static route {{ route.destination }} next-hop {{ route.next_hop }}
{% endfor %}
{% endif %}

{% if routing.ospf is defined %}
{% for area in routing.ospf.areas %}
{% for interface in area.interfaces %}
set protocols ospf area {{ area.id }} interface {{ interface }}
{% endfor %}
{% endfor %}
{% endif %}

# Configure NTP
{% for server in ntp.servers %}
set system ntp server {{ server }}
{% endfor %}

# Configure SNMP
set snmp community {{ snmp.community }} authorization read-only
set snmp contact "{{ snmp.contact }}"
set snmp location "{{ snmp.location }}"

# Configure syslog
set system syslog host {{ syslog.host }} facility {{ syslog.facility }} level {{ syslog.level }}

# Save configuration
commit and-quit